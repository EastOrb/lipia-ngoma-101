service: () -> {
    createEvent: (record {venue:text; dj_name:text; scheduled_at:nat64; capacity:nat64; event_name:text}) -> (variant {Ok:record {id:text; venue:text; created_at:nat64; dj_name:text; scheduled_at:nat64; capacity:nat64; event_name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createPlaylist: (record {song_list:vec text; dj_name:text; event_id:text}) -> (variant {Ok:record {id:text; created_at:nat64; song_list:vec text; dj_name:text; event_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createRating: (record {review:text; user_id:text; dj_name:text; rating:nat64}) -> (variant {Ok:record {id:text; review:text; created_at:nat64; user_id:text; dj_name:text; rating:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createSongRequest: (record {user_id:text; song_name:text}) -> (variant {Ok:record {id:text; request_status:variant {Played; Pending}; created_at:nat64; user_id:text; song_name:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createTip: (record {user_id:text; dj_name:text; amount:nat64}) -> (variant {Ok:record {id:text; tip_status:variant {Completed; Pending}; created_at:nat64; user_id:text; dj_name:text; amount:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    createUserProfile: (record {contact:text; name:text; role:variant {DJ; RegularUser; Admin}}) -> (variant {Ok:record {id:text; status:variant {Deactivated; Active}; contact:text; name:text; role:variant {DJ; RegularUser; Admin}; created_at:nat64; points:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
    getAllEvents: () -> (variant {Ok:vec record {id:text; venue:text; created_at:nat64; dj_name:text; scheduled_at:nat64; capacity:nat64; event_name:text}; Err:text}) query;
    getEventByName: (text) -> (variant {Ok:record {id:text; venue:text; created_at:nat64; dj_name:text; scheduled_at:nat64; capacity:nat64; event_name:text}; Err:text}) query;
    getLeaderboard: () -> (variant {Ok:vec record {avg_rating:nat64; total_tips:nat64; dj_name:text; total_ratings:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPlaylistByDjName: (text) -> (variant {Ok:vec record {id:text; created_at:nat64; song_list:vec text; dj_name:text; event_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getPlaylistByEventId: (nat64) -> (variant {Ok:vec record {id:text; created_at:nat64; song_list:vec text; dj_name:text; event_id:text}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getUserProfile: (text) -> (variant {Ok:record {id:text; status:variant {Deactivated; Active}; contact:text; name:text; role:variant {DJ; RegularUser; Admin}; created_at:nat64; points:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    getUserProfiles: () -> (variant {Ok:vec record {id:text; status:variant {Deactivated; Active}; contact:text; name:text; role:variant {DJ; RegularUser; Admin}; created_at:nat64; points:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}}) query;
    searchDjs: (text) -> (vec record {avg_rating:nat64; total_tips:nat64; dj_name:text; total_ratings:nat64}) query;
    updateUserProfile: (text, record {contact:text; name:text; role:variant {DJ; RegularUser; Admin}}) -> (variant {Ok:record {id:text; status:variant {Deactivated; Active}; contact:text; name:text; role:variant {DJ; RegularUser; Admin}; created_at:nat64; points:nat64}; Err:variant {Error:text; PaymentFailed:text; InvalidPayload:text; NotFound:text; Success:text; PaymentCompleted:text}});
}
